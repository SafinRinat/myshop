{% extends "@MyShopAdmin/layout.html.twig" %}

{% block body %}
    Admin panel (CMS)
    {% if history is defined %}
        {{ history|raw }}
    {% endif %}
    <div>
        <div>
            Домашнее задание: 25.01.17
            <ul>
                <li style="text-decoration: line-through;">
                    1. Создать Entity согласно вашим ТЗ (Product, Category, News, и.т.д. кто какие
                    придумал себе в ТЗ).
                </li>
                <li  style="text-decoration: line-through;">
                    2. Настроить соединение с базой данных
                </li>
                <li  style="text-decoration: line-through;">
                    3. Создать базу данных.
                </li>
                <li  style="text-decoration: line-through;">
                    4. выгрузить на GitHub в репозиторий
                </li>
                <li  style="text-decoration: line-through;">
                    5. Ссылку на репозиторий кинуть мне в скайп или на емеил
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 30.01.2017
            <ul>
                <li style="text-decoration: line-through;">
                    1. создать AdminBundle
                </li>
                <li  style="text-decoration: line-through;">
                    2. для всех ваших Entity создать CRUD (функционал: добавлене, редактирование и удаление).
                    1 Entity >= 1 Controller
                </li>
                <li  style="text-decoration: line-through;">
                    3. выложить в GIT
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 02.02.17
            <ul>
                <li  style="text-decoration: line-through;">
                    1. Создать Entity фото для вашего товара
                </li>
                <li style="text-decoration: line-through;">
                    2. настроить связи между товаром и фото товара
                </li>
                <li style="text-decoration: line-through;">
                    <span>
                        3. Сделать загрузку фотографий и функционал добавления, редактирования и удаления.
                    </span>

                    Редактирование имеется ввиду, редактирование полей которые сопутствуют сущности фото товара
                    (если кто-то сможет сделать редактирование самой фото, то есть, при редактировании если пользователь
                    загружает новую фото, то старая фотка удоляется - будет очень круто и +1 к карме  ).
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 05.02.17
            <ul>
                <li style="text-decoration: line-through;">
                    1. сделать свой сервис для проверки расширения и mime type картинки (расширения и mime type должны
                    задаваться из конфига)
                </li>
                <li style="text-decoration: line-through;">
                    2. сделать ресайз картинки (пороговые значения ширины и высоты картинки должны задаваться из конфига)
                </li>
                <li>
                    3. сделать свою категорию в виде дерева
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 08.02.2017
            Я прошу прощения что последние пару дней не могу оперативно отвечать на ваши вопросы (по работе очень большой завал), так же сегодня занятия не будет к сожалению (мне нужно на работе порешать проблемы).
            Постарайтесь пожалуйста к воскресенью доделать последнюю домашку и начинайте ее преображать (натягивать дизайн шаблоны который вы выбрали).
        </div>
        <div>
            Домашнее задание: 12.02.2017
            <ul>
                <li>
                    1. Установить шаблон (имеется ввиду натянуть на шаблонизатор Twig в своем проекте) который вы
                    выбрали для своего интернет магазина.
                </li>
                <li>
                    2. Сделать сервис по загрузке фотографий (по аналогии как мы сегодня делали на занятии).
                </li>
                <li>
                    3. Добавить Flash Message после действия добавление товара (или картинки или категорий),
                    редатирования, удаления.
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 19.02.2017
            <ul>
                <li>
                    1. Создать сервис по рассылке сообщений
                </li>
                <li>
                    2. При каждом действии пользователя в админке отправлять уведомление на емеил. (минимум 5 действий.
                    Одно действие это к примеру: добавление товара или создание категории)
                </li>
            </ul>
        </div>

        <div>
            Домашнее задание: 16.02.2017
            <ul>
                <li>
                    *Установите ваш выбранный шаблон (натяните html верстку на twig шаблонизатор) на ваш проект магазина!
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 26.02.2017 18:40:29 - 22:57:23
            <ul>
                <li>
                    Домашнее задание: разработать api (REST или JSON-RPC). Минимум 2 действия.
                    <ol>
                        <li2>
                            1. При запросе отдавать весь список товаров с картиной (модель, идшник, цена, картинка).
                        </li2>
                        <li2>
                            2. При запросе отдавать информацию о конкретном товаре (все данные о товаре).
                        </li2>
                    </ol>
                </li>
                <li>
                    Формат ответа любой нп ваш выбор. Json или xml
                </li>
                <li>
                    Да и еще одно дополнение к домашке (да в этот раз домашка будет не маленькой):
                    Для Entity Product вам необходимо добавить Constraints (Assert-ы который я сегодня на занятии показывал)
                    и сделать проверку валидации при добавлении товара
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 5.03.2017
            <ul>
                <li>
                    1. сделать свой сервис для проверки расширения и mime type картинки (расширения и mime type должны задаваться из конфига)
                </li>
                <li>
                    2. сделать ресайз картинки (пороговые значения ширины и высоты картинки должны задаваться из конфига)
                </li>
                <li>
                    3. сделать свою категорию в виде дерева
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 12.03.2017
            <ul>
                <li>
                    Я прошу прощения что последние пару дней не могу оперативно отвечать на ваши вопросы (по работе очень большой завал),
                    так же сегодня занятия не будет к сожалению (мне нужно на работе порешать проблемы).
                    Постарайтесь пожалуйста к воскресенью доделать последнюю домашку и начинайте ее преображать (натягивать дизайн шаблоны который вы выбрали
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 12.03.2017
            [2/12/17, 19:03:10] Igor:
            <ul>
                <li>
                    1. Установить шаблон (имеется ввиду натянуть на шаблонизатор Twig в своем проекте) который вы выбрали для своего интернет магазина.
                </li>
                <li>
                    2. Сделать сервис по загрузке фотографий (по аналогии как мы сегодня делали на занятии).
                </li>
                <li>
                    3. Добавить Flash Message после действия добавление товара (или картинки или категорий), редатирования, удаления.
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 16.03.2017
            On 2/16/17, at 23:08, Igor wrote:
            > Да, кстати, по поводу домашнего задания.
            <ul>
                <li>
                    *Установите ваш выбранный шаблон (натяните html верстку на twig шаблонизатор) на ваш проект магазина!
                    бесплатные шаблоны настолько полезные, что можно и фронт-энд подучить, пока править будешь.
                    + там миллион страниц будет. За раз можно не уложиться.
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 19.03.2017
            <ul>
                <li>1. Создать сервис по рассылке сообщений</li>
                <li>2. При каждом действии пользователя в админке отправлять уведомление на емеил. (минимум 5 действий. Одно действие это к примеру: добавление товара или создание категории)</li>
                <li>
                    [2/19/17, 20:11:45] Igor: кому интересно, как отправлять смс через ваш сайт/приложение:

                    https://kyivstar.ua/uk/mm/services/messages/smsmmse-mail
                    [2/19/17, 20:13:02] Igor: У кого есть время и желание, вот вам дополнительное задание
                    При авторизации (то есть когда пользователь логинется в админку), вы должны выслать код,
                    пользователю на телефон и пользователь когда его получит, должен ввести этот код и тогда система
                    пустит его в админку.
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 26.03.2017
            <ul>
                <li>
                    Домашнее задание: разработать api (REST или JSON-RPC). Минимум 2 действия.
                    <ol>
                        <li>
                            1. При запросе отдавать весь список товаров с картиной (модель, идшник, цена, картинка).
                        </li>
                        <li>
                            2. При запросе отдавать информацию о конкретном товаре (все данные о товаре).
                            Формат ответа любой нп ваш выбор. Json или xml
                        </li>
                    </ol>
                </li>
                <li>
                    Да и еще одно дополнение к домашке (да в этот раз домашка будет не маленькой):
                    Для Entity Product вам необходимо добавить Constraints (Assert-ы который я сегодня на занятии
                    показывал) и сделать проверку валидации при добавлении товара
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 10.04.2017
            <ul>
                <li>
                    1. Сделать функционал истории заказов (отображать заказы только со статусом DONE и REJECT).
                </li>
                <li>
                    2. Помните я на занятии показывал сумму?
                    { % set sum = product.price * product.count % }
                    вот это убрать из твига и вынести в нормальное место (в метод Entity или в твиг расширение или
                    отдельным сервисом, как хотите)
                </li>
                <li>
                    корзина и регистрация покупателя в гите.
                    Но повторюсь, не копируйте код в слепую. Используйте его как справочное руководство.
                    Вот примерно так:
                    1. пытайтесь делать сами
                    2. если не получается, гуглите, ищите проблему в интернете
                    3. если не получается, смотрите видео урока
                    4. если не получается, смотрите в код на гитхабе
                </li>
                <li>
                    походу выполнения домашки, добавляйте нужный функционал.
                    Например: можете добавить вывод всех заказов, всех пользователей в админке.
                    Можете добавить еще один статус у заказа типа “обработан админом” или как-то так.
                    Можете сделать отправку копии этого заказа на емеил покупателя, и.т.д.
                    Не ограничивайтесь одной домашкой. Это практика и практика реальная, именно с такими задачами
                    вы сталкнетесь в реальной работе.
                </li>
                <li>
                    djeksan_d>А можно вопрос   . вот мы постоянно добавляем записи в базу ,
                    а как нам обновить например одну и туже запись
                    >igor:
                    $productId = 5;
                    $manager = $this->getDoctrine()->getManager();
                    $product = $manager->getRepository(“MyShopDefaultBundle:Product”)->find($idProduct);

                    $product->setModel(“new product model“);

                    $manager->persist($product);
                    $manager->flush();
                    djeksan_d>
                    а как связывается вьюшка  с фомой ?
                    < form enctype="multipart/form-data" method="POST" action="{ { path("admin_productPhoto",{id:product.id}) } }">

                    { { form_widget(form) } }
                    < input type="submit" value="adsd" / >
                    < / form>
                    ""admin_productPhoto ""  это котроллер , а    { { form_widget(form) } }  ??

                    >IGOR:
                    public function someAction() {
                    ….
                    return [‘form’ => $form->createView()];
                    }

                    ну конечно:

                    $form = $this->craeteForm(FormClass::class, $entity);
                </li>
                <li>
                    Потихоньку начинаем готовится к реальному собеседованию на работе + реальному понимаю “как же все это работает“.
                    Вот 2 ссылки:
                    1. https://habrahabr.ru/post/215117/
                    2. http://ruseller.com/lessons.php?rub=28&id=1726

                    Обязательно к детальному прочтению (не сегодня, вообще впринцыпи).
                    Так как не имея понимания что такое HTTP протокол то дальше двигаться будет очень и очень сложно.

                    А также, ошибка многих начинающих разработчиков заключается в том, что они думают, что их на собеседовании будут гонять по функциями и классам PHP, но реалии таковы, что 40 а то и 50% вопросов к вам буду связанны с HTTP протоколом.
                </li>
            </ul>
        </div>
        <div>
            Домашнее задание: 10.04.2017
            <ul>
                <li>
                    Вам нужно сделать возможность сделать заказ без регистрации пользователя (но для 1-го товара только).
                    То есть, пользователь нажимает купить товар и дальнейшее действие система ему предлагает его сразу же оформить.
                </li>
            </ul>
        </div>
        <div>
            <pre>
            skype:
            ==========
            Да кстати, по поводу валидации на стороне клиента (js валидация). Вот бандл который расширяет это:
            https://github.com/formapro/JsFormValidatorBundle
            ==========
            >а вариант с вытаскиванием фотки из массива с помощью индекса в твиге, то что мы на занятии обговаривали, не получится  тут?
            [3/4/17, 22:16:20] Igor: On 3/4/17, at 22:15, Алексей wrote:
            > а вариант с вытаскиванием фотки из массива с помощью индекса в твиге, то что мы на занятии обговаривали, не получится  тут?

            Получится, но это плохой вариант.
            Кстати! Сейчас попробую этот вопрос с обращением по индексу посмотреть… пару минут
            [3/4/17, 22:19:29] Igor: On 3/4/17, at 22:16, Igor wrote:
            > попробую этот вопрос с обращением по индексу посмотреть

            в контроллере сделал:
            $products = $this->getDoctrine()->getRepository(“MyShopDefaultBundle:Product”)->findAll();
            return [“products” => $products];

            далее в twig шаблоне сделал:

            { { products.0.id } }
            и все ок вывело
            ==========
            On 3/5/17, at 15:17, Владимир wrote:
            > configured limit: 1
            1. setCircularReferenceLimit это метод объекта ObjectNormalizer
            2. limit уже равен 1
            конечно, на всякий случай попытался, но
            Attempted to call an undefined method named "setCircularReferenceLimit" of class "Symfony\Component\Serializer\Serializer
            похоже, копаться надо тут setCircularReferenceHandler, опять же у ObjectNormalizer, как по документации http://symfony.com/doc/current/components/serializer.html
            ==========
            >Serializer этот похоже не ест объекты с внешними ключами. Может быть ложечкой как-то и можно накормить, но так не хочет
            "A circular reference has been detected (configured limit: 1)."
            [3/5/17, 22:14:30] Igor: $serializer = $this->get(“serializer”);
            $serializer->setCircularReferenceLimit(1);
            [3/5/17, 22:18:43] Igor: да и еще, чтобы был доступен сервис serializer его нужно включить в конфиге:
            app/config/config.yml
            в секции framework
            framework:
            serializer:
            enabled: true

            ==========
            On 3/3/17, at 17:08, Иванова Ира wrote:
            > а как из них  вытащить  одну фотку как заглавную?

            ну тут 2 варианта есть.
            Вариант 1 добавить к классу Product еще одно поле которое будет звучать как: mainPhotoFileName

            Вариант 2. добавить еще одно поле к классу ProductPhoto, которое будет звучать как-то так: isMainPhoto и будет иметь тип boolean.
            Тогда имея весь массив обьектов ProductPhoto вы сможете в нем найти главную фотку и передать ее в twig
            в реальный магазинах используется вариант №1
            ==========
            </pre>
        </div>
    </div>
{% endblock %}